shell_patterns=0
+ ! t t
@       Do something on the current file
	CMD=%{Enter command}
	$CMD %f

+ t t
@       Do something on the tagged files
	set %t; CMD=%{Enter command}
	while [ -n "$1" ]; do
	  $CMD "$1"
	  shift
	done
	

0       Edit a bug report and send it to root
	I=`mktemp "${MC_TMPDIR:-/tmp}/mail.XXXXXX"` || exit 1
	${EDITOR-vi} "$I"
	test -r $I && mail root < $I
	rm -f "$I"

U       Update and upgrade Cameras System
        sudo apt-get update
        sudo apt-get upgrade

d       WiFi The Dynamic Host Configuration Protocol (DHCP)
	sudo cp /home/pi/msp/mspcam/etc/network/interfaces.wifi.dhcp /etc/network/interfaces

s       WiFi The Static Configuration
	sudo cp /home/pi/msp/mspcam/etc/network/interfaces.wifi.static /etc/network/interfaces
	IP=%{Enter IP adress}
	GW=%{Enter GateWay IP adress}
        cat /etc/network/interfaces | sed -e 's/'"address 192.168.1.8"'/'"address $IP"'/g' | sed -e 's/'"gateway 192.168.1.50"'/'"gateway $GW"'/g' >  ./interfaces
        sudo rm /etc/network/interfaces
        sudo mv ./interfaces /etc/network/interfaces

w       WPA supplicant
	SSID=%{Enter SSID}
        PW=%{Enter WiFi password}
	wpa_passphrase $SSID $PW > ./psk.conf 
	PSK=`cat ./psk.conf | grep -v \#psk= | grep psk= | awk '{print $1}'` 2>/dev/null
	rm ./psk.conf
	sudo cp /home/pi/msp/mspcam/etc/wpa_supplicant/wpa_supplicant.conf  /etc/wpa_supplicant/wpa_supplicant.conf
        sudo cat /etc/wpa_supplicant/wpa_supplicant.conf | sed -e 's/'"psk=b2a8b6f1d1cff740d784168515c0aa776f489fdbed76eb393bda1df511dc23d3"'/'"$PSK"'/g'| sed -e 's/'"amico"'/'"$SSID"'/g' >  ./wpa_supplicant.conf
        sudo rm /etc/wpa_supplicant/wpa_supplicant.conf
        sudo mv ./wpa_supplicant.conf  /etc/wpa_supplicant/wpa_supplicant.conf

l       Install /etc/init.d/livestream.sh daemon
	sudo cp /home/pi/msp/mspcam/etc/init.d/livestream.sh /etc/init.d/livestream.sh
        LN=%{Enter nick}
	PW=%{Enter password}
        cat /etc/init.d/livestream.sh | sed -e 's/'"artak:123"'/'"$LN:$PW"'/g' >  ./livestream.sh
        sudo rm /etc/init.d/livestream.sh
        sudo mv ./livestream.sh /etc/init.d/livestream.sh
	sudo chmod +x /etc/init.d/livestream.sh

i       Install work script (cam,build,watchdog,vnc,cron,rc.local)
	LN=%{Enter mjpeg-stream nick}
        PW=%{Enter mjpeg-stream password}
        USR=%{Enter user name of that system}
	cp /home/$USR/msp/mspcam/build.sh /home/$USR/
	cat /home/$USR/build.sh > ./build.sh
	cat ./build.sh | sed -e 's/'"8080"'/'"8080"'/g' >  ./build0.sh
	cat ./build.sh | sed -e 's/'"8080"'/'"8081"'/g' >  ./build1.sh
	cat ./build.sh | sed -e 's/'"8080"'/'"8082"'/g' >  ./build2.sh
	cat ./build.sh | sed -e 's/'"8080"'/'"8083"'/g' >  ./build3.sh
	cat ./build0.sh | sed -e 's/'"8080"'/'"80"'/g' >  ./build.sh
	sudo rm /home/$USR/build.sh
	sudo rm /home/$USR/build*.sh
	sudo mv ./build.sh  /home/$USR/build.sh
	sudo mv ./build*.sh  /home/$USR/
	chown $USR:$USR /home/$USR/build.sh
	chown $USR:$USR /home/$USR/build*.sh
	chmod +x /home/$USR/build.sh
	chmod +x /home/$USR/build*.sh
        cp /home/$USR/msp/mspcam/cam.sh /home/$USR/
        cat /home/$USR/cam.sh | sed -e 's/'"artak:123"'/'"$LN:$PW"'/g' >  ./cam.sh
	cat ./cam.sh | sed -e 's/'"8080"'/'"8080"'/g' >  ./cam0.sh
	cat ./cam.sh | sed -e 's/'"8080"'/'"8081"'/g' >  ./cam1.sh
	cat ./cam.sh | sed -e 's/'"8080"'/'"8082"'/g' >  ./cam2.sh
	cat ./cam.sh | sed -e 's/'"8080"'/'"8083"'/g' >  ./cam3.sh
	cat ./cam0.sh | sed -e 's/'"8080"'/'"80"'/g' >  ./cam.sh
	sudo rm /home/$USR/cam.sh
	sudo rm /home/$USR/cam*.sh
	sudo mv ./cam.sh  /home/$USR/cam.sh
	sudo mv ./cam*.sh  /home/$USR/
        chown $USR:$USR /home/$USR/cam.sh
	chown $USR:$USR /home/$USR/cam*.sh
	chmod +x /home/$USR/cam.sh
	chmod +x /home/$USR/cam*.sh 
        cp /home/$USR/msp/mspcam/network_watchdog.sh /home/$USR/
        chown $USR:$USR /home/$USR/network_watchdog.sh
        cp /home/$USR/msp/mspcam/vnc.sh /home/$USR/
        chown $USR:$USR /home/$USR/vnc.sh
	sudo cp /home/$USR/msp/mspcam/etc/crontab /etc/crontab
	cat /etc/crontab | sed -e 's/'"\/home\/pi"'/'"\/home\/$USR"'/g' > ./crontab
	sudo rm /etc/crontab
	sudo mv ./crontab /etc/crontab
	sudo cp /home/$USR/msp/mspcam/etc/rc.local /etc/rc.local
        cat /etc/rc.local | sed -e 's/'"artak:123"'/'"$LN:$PW"'/g'| sed -e 's/'"\/home\/pi"'/'"\/home\/$USR"'/g' >  ./rc.local 
        sudo rm /etc/rc.local
        sudo mv ./rc.local  /etc/rc.local
        sudo chmod +x /etc/rc.local

p       Install package (vnc,tzdata,imagemagick,svn,mjpg-streamer,curl)
	USR=%{Enter user name of that system}
	sudo apt-get update
	sudo apt-get install ghostscript
	sudo apt-get install tightvncserver
	sudo apt-get install imagemagick
	sudo dpkg-reconfigure tzdata
	sudo apt-get install libav-tools
	sudo apt-get install libjpeg8-dev
	sudo apt-get install curl libcurl3
	sudo apt-get install subversion
	cd /home/$USR
	sudo svn co https://svn.code.sf.net/p/mjpg-streamer/code/mjpg-streamer/ /home/$USR/mjpg-streamer
	cd /home/$USR/mjpg-streamer
	make
	sudo make install

f       Install davfs2 file system on Yandex cloud
	sudo apt-get update
	sudo apt-get install davfs2
	sudo mkdir /mnt/dav
        LN=%{Enter yandex nick}
        PW=%{Enter yandex password}
	USR=%{Enter user name of that system}
	sudo cp /home/$USR/msp/mspcam/etc/davfs2/secrets /etc/davfs2/secrets
        cat /etc/davfs2/secrets | sed -e 's/'"nickya 123"'/'"$LN $PW"'/g' >  ./secrets
        sudo rm /etc/davfs2/secrets
        sudo mv ./secrets /etc/davfs2/secrets
	sudo chmod 0600 /etc/davfs2/secrets
	sudo mount -t davfs https://webdav.yandex.ru /mnt/dav -o uid=$USR,gid=$USR

D       Install Dyn DNS system
	sudo apt-get update
	sudo apt-get install inadyn
	USR=%{Enter user name of that system}
	sudo cp /home/$USR/msp/mspcam/etc/inadyn.conf /etc/inadyn.conf
        LN=%{Enter nick}
        PW=%{Enter password}
	AL=%{Enter InaDyn alias (*.crabdance.com)}
	HASH=%{Enter InaDyn hex hash}
        cat /etc/inadyn.conf | sed -e 's/'"--username ignat99"'/'"--username $LN"'/g' | sed -e 's/'"--password 123"'/'"--password $PW"'/g' | sed -e 's/'"ZmZXU3J2NGZPTmRxQWdZZGV0U050U0xqOjEzMDM2MTIy"'/'"$HASH"'/g' | sed -e 's/'"alias ignat99.crabdance.com"'/'"alias $AL"'/g'  >  ./inadyn.conf
        sudo rm /etc/inadyn.conf
        sudo mv ./inadyn.conf /etc/inadyn.conf
	cat /home/$USR/msp/mspcam/var/spool/cron/crontabs/root | sed -e 's/'"\/home\/pi"'/'"\/home\/$USR"'/g' > ./root
	sudo rm /var/spool/cron/crontabs/root
	sudo mv ./root /var/spool/cron/crontabs/root

P       Install Proxy Privoxy
        sudo apt-get update
        sudo apt-get install privoxy
	USR=%{Enter user name of that system}
	sudo cp /home/$USR/msp/mspcam/etc/privoxy/config /etc/privoxy/config
	IP=%{Enter IP adress}
	cat /etc/privoxy/config | sed -e 's/'"listen-address  192.168.1.8"'/'"listen-address  $IP"'/g' >  ./config
	sudo rm /etc/privoxy/config
	sudo mv ./config /etc/privoxy/config

=+ f \.1$ | f \.3$ | f \.4$ | f \.5$ | f \.6$ | f \.7$ | f \.8$ | f \.man$ & t r
1       Display the file with roff -man
	nroff -man %f | less

2       Call the info hypertext browser
        info

= t d
3       Compress the current subdirectory (tar.gz)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | gzip -f9 > "$tar.tar.gz" && \
	echo "../$tar.tar.gz created."

4       Compress the current subdirectory (tar.bz2)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | bzip2 -f > "$tar.tar.bz2" && \
	echo "../$tar.tar.bz2 created."

5       Compress the current subdirectory (tar.7z)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | 7za a -si "$tar.tar.7z" && \
	echo "../$tar.tar.7z created."

6       Compress the current subdirectory (tar.xz)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
        if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && \
	tar cf - "$Pwd" | xz -f > "$tar.tar.xz" && \
	echo "../$tar.tar.xz created."

= f \.c$ & t r
+ f \.c$ & t r & ! t t
с       Compile and link current .c file
        make `basename %f .c` 2>/dev/null || cc -O -o `basename %f .c` %f

+ t r & ! t t
a       Append file to opposite
	cat %f >> %D/%f

+ t t
A       Append files to opposite files
	set %t
	while [ -n "$1" ]; do
	  cat "$1" >> "%D/$1"
	  shift
	done

+ t r & ! t t
d       Delete file if a copy exists in the other directory.
	if [ "%d" = "%D" ]; then
	  echo "The two directories must be different."
	  exit 1
	fi
	if [ -f %D/%f ]; then        # if two of them, then
          if cmp -s %D/%f %f; then
            rm %f && echo "%f: DELETED."
          else
            echo "%f and %D/%f differ: NOT deleted."
            echo -n "Press RETURN "
            read key
          fi
	else
	  echo "%f: No copy in %D/%f: NOT deleted."
        fi

+ t t
D       Delete tagged files if a copy exists in the other directory.
	if [ "%d" = "%D" ]; then
	  echo "The two directores must be different."
	  exit 1
	fi
        for i in %t
        do
          if [ -f "%D/$i" ]; then
            SUM1="`sum $i`"
            SUM2="`sum %D/$i`"
            if [ "$SUM1" = "$SUM2" ]; then
	      rm "$i" && echo "${i}: DELETED."
	    else
	      echo "$i and %D/$i differ: NOT deleted."
	    fi
	  else
	    echo "%i has no copy in %D: NOT deleted."
          fi
        done

m       View manual page
	MAN=%{Enter manual name}
	%view man -P cat $MAN

= f \.gz$ & t r
+ ! t t
n       Inspect gzip'ed newsbatch file
        dd if=%f bs=1 skip=12|zcat|${PAGER-more}
        # assuming the cunbatch header is 12 bytes long.

= t r &
+ ! t t
h       Strip headers from current newsarticle
	CHECK=`awk '{print $1 ; exit}' %f` 2>/dev/null
	case "$CHECK" in
	  Newsgroups:|Path:)
	      I=`mktemp "${MC_TMPDIR:-/tmp}/news.XXXXXX"` || exit 1
	      cp %f "$I" && sed '/^'"$CHECK"' /,/^$/d' "$I" > %f
              [ "$?" = "0" ] && rm "$I"
	      echo "%f: header removed."
		;;
	  *)
	      echo "%f is not a news article."
		;;
	esac

+ t t
H       Strip headers from the marked newsarticles
	set %t
	while [ -n "$1" ]; do
	  CHECK=`awk '{print $1 ; exit}' $1` 2>/dev/null
	  WFILE=`mktemp "${MC_TMPDIR:-/tmp}/news.XXXXXX"` || exit 1
	  case "$CHECK" in
	    Newsgroups:|Path:)
	      cp "$1" "$WFILE" && sed '/^'"$CHECK"' /,/^$/d' "$WFILE" > "$1"
              if [ "$?" = "0" ]; then
		rm "$WFILE"; echo "$1 header removed. OK."
	      else
		echo "Oops! Please check $1 against $WFILE."
	      fi
		;;
	    *)
	      echo "$1 skipped: Not a news article."
		;;
	  esac
	  shift
	done

= t r
+ ! t t
r       Copy file to remote host
	echo -n "To which host?: "
        read Host
        echo -n "To which directory on $Host?: "
        read Dir
        rcp -p %f "${Host}:$Dir"

+ t t
R       Copy files to remote host (no error checking)
	echo -n "Copy files to which host?: "
        read Host
        echo -n "To which directory on $Host? :"
        read Dir
        rcp -pr %u "${Host}:$Dir"

= f \.tex$ & t r
+ f \.tex$ & t r & ! t t
t       Run latex on file and show it with xdvi
        latex %f && xdvi `basename %f .tex`.dvi

=+ f ^part | f ^Part | f uue & t r
+ t t
U       Uudecode marked news articles (needs work)
	set %t
        (
	while [ -n "$1" ]; do # strip headers
	  FIRST=`awk '{print $1 ; exit}' "$1"`
	  cat "$1" | sed '/^'"$FIRST"' /,/^$/d'; shift
	done
	) |sed '/^$/d' |sed -n '/^begin 6/,/^end$/p' | uudecode
	if [ "$?" != "0" ]; then
	  echo "Cannot decode %t."
	fi
	echo "Please test the output file before deleting anything."

=+ f \.tar\.gz$ | f \.tar\.z$ | f \.tgz$ | f \.tpz$ | f \.tar\.lz$ | f \.tar\.lzma$ | f \.tar\.7z$ | f \.tar\.xz$ | f \.tar\.Z$ | f \.tar\.bz2$ & t r
x       Extract the contents of a compressed tar file
	unset PRG
	case %f in
	    *.tar.bz2)
		PRG="bunzip2 -c"
		;;
	    *.tar.gz|*.tar.z|*.tgz|*.tpz|*.tar.Z)
		PRG="gzip -dc"
		;;
	    *.tar.lzma)
		PRG="lzma -dc"
		;;
	    *.tar.lz)
		PRG="lzip -dc"
		;;
	    *.tar.xz)
		PRG="xz -dc"
		;;
	    *.tar.7z)
		PRG="7za e -so"
		;;
	    *)
		exit 1
		;;
	esac
	$PRG %f | tar xvf -

= t r
+ ! t t
y       Gzip or gunzip current file
        unset DECOMP
	case %f in
	    *.gz) DECOMP=-d;;
	    *.[zZ]) DECOMP=-d;;
	esac
        gzip $DECOMP -v %f

+ t t
Y       Gzip or gunzip tagged files
        for i in %t
        do
          unset DECOMP
	  case "$i" in
	    *.gz) DECOMP=-d;;
	    *.[zZ]) DECOMP=-d;;
	  esac
          gzip $DECOMP -v "$i"
        done

+ ! t t
b       Bzip2 or bunzip2 current file
        unset DECOMP
	case %f in
	    *.bz2) DECOMP=-d;;
	esac
        bzip2 $DECOMP -v %f

+ t t
B       Bzip2 or bunzip2 tagged files
        for i in %t
        do
          unset DECOMP
	  case "$i" in
	    *.bz2) DECOMP=-d;;
	  esac
          bzip2 $DECOMP -v "$i"
        done

+ f \.tar.gz$ | f \.tgz$ | f \.tpz$ | f \.tar.Z$ | f \.tar.z$ | f \.tar.bz2$ | f \.tar.F$ & t r & ! t t
z       Extract compressed tar file to subdirectory
	unset D
	set gzip -cd
	case %f in
	  *.tar.gz) D="`basename %f .tar.gz`";;
	  *.tgz)    D="`basename %f .tgz`";;
	  *.tpz)    D="`basename %f .tpz`";;
	  *.tar.Z)  D="`basename %f .tar.Z`";;
	  *.tar.z)  D="`basename %f .tar.z`";;
	  *.tar.bz2) D="`basename %f .tar.bz2`"; set bunzip2 -c ;;
	  *.tar.F) D="`basename %f .tar.F`"; set freeze -dc;
	esac
	mkdir "$D"; cd "$D" && ("$1" "$2" ../%f | tar xvf -)

+ t t
Z       Extract compressed tar files to subdirectories
	for i in %t
        do
	  set gzip -dc
          unset D
	  case "$i" in
	    *.tar.gz)  D="`basename $i .tar.gz`";;
	    *.tgz)     D="`basename $i .tgz`";;
	    *.tpz)     D="`basename $i .tpz`";;
	    *.tar.Z)   D="`basename $i .tar.Z`";;
	    *.tar.z)   D="`basename $i .tar.z`";;
	    *.tar.F)   D="`basename $i .tar.F`"; set freeze -dc;;
	    *.tar.bz2) D="`basename $i .tar.bz2`"; set bunzip2 -c;;
          esac
	  mkdir "$D"; (cd "$D" && "$1" "$2" "../$i" | tar xvf -)
        done

+ f \.gz$ | f \.tgz$ | f \.tpz$ | f \.Z$ | f \.z$ | f \.bz2$ & t r & ! t t
c       Convert gz<->bz2, tar.gz<->tar.bz2 & tgz->tar.bz2
	unset D
	unset EXT
	case %f in
	    *.tgz)	EXT=tgz;;
	    *.tpz)	EXT=tpz;;
	    *.Z)	EXT=Z;;
	    *.z)	EXT=z;;
	    *.gz)	EXT=gz;;
	    *.bz2)	EXT=bz2;;
	esac
        case $EXT in
	  tgz|tpz)	D="`basename %f .$EXT`.tar";;
	  gz|Z|z)	D="`basename %f .$EXT`";;
	  bz2)		D="`basename %f .bz2`";;
        esac
        if [ "$EXT" = "bz2" ]; then
	    bunzip2 -v %f ; gzip -f9 -v "$D"
	else
	    gunzip -v %f ; bzip2 -v "$D"
	fi

+ t t
C       Convert gz<->bz2, tar.gz<->tar.bz2 & tgz->tar.bz2
	set %t
	while [ -n "$1" ]
        do
	  unset D
	  unset EXT
	  case "$1" in
	    *.tgz)	EXT=tgz;;
	    *.tpz)	EXT=tpz;;
	    *.Z)	EXT=Z;;
	    *.z)	EXT=z;;
	    *.gz)	EXT=gz;;
	    *.bz2)	EXT=bz2;;
	  esac
	  case $EXT in
	      tgz)    D="`basename $1 .tgz`.tar";;
              tpz)    D="`basename $1 .tpz`.tar";;
	      gz|Z|z) D="`basename $1 .$EXT`";;
	      bz2)    D="`basename $1 .bz2`";;
	  esac
	  if [ "$EXT" = "bz2" ]; then
	    bunzip2 -v "$1"
	    gzip -f9 -v "$D"
	  else
	    gunzip -v "$1"
	    bzip2 -v "$D"
	  fi
	  shift
        done

+ x /usr/bin/open | x /usr/local/bin/open & x /bin/sh
o       Open next a free console
        open -s -- sh
